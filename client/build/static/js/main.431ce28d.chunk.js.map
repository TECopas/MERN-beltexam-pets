{"version":3,"sources":["components/PetList.js","components/AddPet.js","components/EditPet.js","components/PetDetail.js","App.js","serviceWorker.js","index.js"],"names":["PetList","props","useState","Pets","setPets","useEffect","axios","get","then","res","data","catch","err","console","log","to","map","pet","i","key","name","type","_id","AddPet","setname","settype","description","setdesc","skill1","setskill1","skill2","setskill2","skill3","setskill3","errors","seterrors","onSubmit","e","preventDefault","post","navigate","onChange","target","value","style","color","message","EditPet","onePet","put","PetDetail","delete","App","className","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.431ce28d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Link } from '@reach/router'\r\n\r\nconst PetList = props =>{\r\n\r\n    const [Pets, setPets] = useState([])\r\n    \r\n    useEffect(()=>{\r\n        axios.get(\"http://localhost:8000/api/pets/\")\r\n        .then(res=>{setPets(res.data.Pets)})\r\n        .catch(err=>console.log(err))\r\n    })\r\n\r\n    // const DeletePet = (id) =>{\r\n    //     axios.delete(\"http://localhost:8000/api/products/delete/\"+id)\r\n    //     .then(res =>{console.log(res)\r\n    //     navigate(\"/\")})\r\n    //     .catch(err =>{console.log(err)})\r\n    // }\r\n\r\n    return <div>\r\n        <h1>Pet Shelter</h1>\r\n        <h3>These Pets are looking for a good home</h3>\r\n        <h5><Link to = {'/pets/new'}> Know of a pet in need of a home?</Link></h5>\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {Pets.map((pet, i)=>\r\n            <tr key = {i}>\r\n                <td>{pet.name}</td>\r\n                <td>{pet.type}</td>\r\n                <td><Link to = {'/pets/'+pet._id}> Details</Link> | <Link to = {'/pets/edit/'+pet._id}> Edit</Link> </td>\r\n            </tr>)}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n}\r\n\r\nexport default PetList","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport { navigate, Link } from '@reach/router';\r\n\r\nconst AddPet = props =>{\r\n\r\n  const [name, setname] = useState(\"\")\r\n  const [type, settype] = useState(\"\")\r\n  const [description, setdesc] = useState(\"\")\r\n  const [skill1, setskill1] = useState(\"\")\r\n  const [skill2, setskill2] = useState(\"\")\r\n  const [skill3, setskill3] = useState(\"\")\r\n\r\n  const [errors, seterrors] = useState({})\r\n\r\n  const GeneratePet = e =>{\r\n    e.preventDefault();\r\n    axios.post(\r\n      \"http://localhost:8000/api/pets/new\",{\r\n      name,\r\n      type,\r\n      description,\r\n      skill1,\r\n      skill2,\r\n      skill3,\r\n      })\r\n      .then(res=>{console.log(res)\r\n        if (res.data.errors)\r\n           seterrors(res.data.errors)\r\n        else\r\n          navigate(\"/\")})\r\n      .catch(err=>{console.log(err)})\r\n  }\r\n\r\n    return <div>\r\n        <form onSubmit={GeneratePet}>\r\n         <p>Pet Name: <input type=\"text\" onChange={e=>setname(e.target.value)} value={name}/></p>\r\n          <p style ={{color:\"red\"}}>{errors.name? errors.name.message: \"\"}</p>\r\n         <p>Pet Type: <input type=\"text\" onChange={e=>settype(e.target.value)} value={type}/></p>\r\n         <p style ={{color:\"red\"}}>{errors.type? errors.type.message: \"\"}</p>\r\n         <p>Description: <input type=\"text\" onChange={e=>setdesc(e.target.value)} value={description}/></p>\r\n         <p style ={{color:\"red\"}}>{errors.description? errors.description.message: \"\"}</p>\r\n         <p>Skill 1: <input type=\"text\" onChange={e=>setskill1(e.target.value)} value={skill1}/></p>\r\n         <p>Skill 2: <input type=\"text\" onChange={e=>setskill2(e.target.value)} value={skill2}/></p>\r\n         <p>Skill 3: <input type=\"text\" onChange={e=>setskill3(e.target.value)} value={skill3}/></p>\r\n         <button>Add Pet</button>\r\n        </form>\r\n        <Link to = {'/'}> Return to Main Page</Link> \r\n    </div>\r\n}\r\n\r\nexport default AddPet","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { navigate, Link } from '@reach/router'\r\n\r\nconst EditPet = props =>{\r\n\r\n    const [name, setname] = useState(\"\")\r\n    const [type, settype] = useState(\"\")\r\n    const [description, setdesc] = useState(\"\")\r\n    const [skill1, setskill1] = useState(\"\")\r\n    const [skill2, setskill2] = useState(\"\")\r\n    const [skill3, setskill3] = useState(\"\")\r\n\r\n    useEffect( () =>{\r\n        axios.get('http://localhost:8000/api/pets/'+props._id) //\r\n            .then(res => { //Set {} after the => to be able to set multiple abilities per function, example below\r\n                console.log(res.data.name)\r\n                setname(res.data.onePet.name)\r\n                settype(res.data.onePet.type)\r\n                setdesc(res.data.onePet.description)\r\n                setskill1(res.data.onePet.skill1)\r\n                setskill2(res.data.onePet.skill2)\r\n                setskill3(res.data.onePet.skill3)\r\n                console.log(res)\r\n            })\r\n            .catch(err => console.log(err));\r\n    },[]);\r\n\r\n    const UpdatePet = e =>{\r\n        e.preventDefault();\r\n        axios.put(\r\n            \"http://localhost:8000/api/pets/update/\"+props._id,{\r\n            name,\r\n            type,\r\n            description,\r\n            skill1,\r\n            skill2,\r\n            skill3,\r\n            })\r\n            .then(res=>{console.log(res)\r\n            navigate(\"/\")})\r\n            .catch(err=>console.log(err))\r\n            \r\n    }\r\n\r\n    return <fieldset>\r\n        <legend>{name}</legend>\r\n        <form onSubmit={UpdatePet}>\r\n        <p>Pet Name: <input type=\"text\" onChange={e=>setname(e.target.value)} value={name}/></p>\r\n         <p>Pet Type: <input type=\"text\" onChange={e=>settype(e.target.value)} value={type}/></p>\r\n         <p>Description: <input type=\"text\" onChange={e=>setdesc(e.target.value)} value={description}/></p>\r\n         <p>Skill 1: <input type=\"text\" onChange={e=>setskill1(e.target.value)} value={skill1}/></p>\r\n         <p>Skill 2: <input type=\"text\" onChange={e=>setskill2(e.target.value)} value={skill2}/></p>\r\n         <p>Skill 3: <input type=\"text\" onChange={e=>setskill3(e.target.value)} value={skill3}/></p>\r\n         <button>Update Pet Information</button>\r\n        </form>\r\n        <Link to = {'/'}> Return to Main Page</Link> \r\n    </fieldset>\r\n}\r\n\r\nexport default EditPet","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { navigate, Link } from '@reach/router'\r\n\r\nconst PetDetail = props =>{\r\n\r\n    const [name, setname] = useState(\"\")\r\n    const [type, settype] = useState(\"\")\r\n    const [description, setdesc] = useState(\"\")\r\n    const [skill1, setskill1] = useState(\"\")\r\n    const [skill2, setskill2] = useState(\"\")\r\n    const [skill3, setskill3] = useState(\"\")\r\n\r\n    useEffect( () =>{\r\n        axios.get('http://localhost:8000/api/pets/'+props._id) //\r\n            .then(res => { //Set {} after the => to be able to set multiple abilities per function, example below\r\n                console.log(res.data.name)\r\n                setname(res.data.onePet.name)\r\n                settype(res.data.onePet.type)\r\n                setdesc(res.data.onePet.description)\r\n                setskill1(res.data.onePet.skill1)\r\n                setskill2(res.data.onePet.skill2)\r\n                setskill3(res.data.onePet.skill3)\r\n            })\r\n            .catch(err => console.log(err));\r\n    },[]);\r\n\r\n    const adoptPet = e =>{\r\n        e.preventDefault()\r\n        axios.delete(\"http://localhost:8000/api/pets/delete/\"+props._id)\r\n        .then(res =>{console.log(res)\r\n        navigate(\"/\")})\r\n        .catch(err =>{console.log(err)})\r\n    }\r\n\r\n    return <fieldset>\r\n        <legend>{name}</legend>\r\n        <p>Pet Name:{name}</p>\r\n         <p>Pet Type: {type}</p>\r\n         <p>Description: {description}</p>\r\n        <table>\r\n            <tr>\r\n                <th>Skills:</th>\r\n            </tr>\r\n            <tbody>\r\n            <tr><td>{skill1}</td></tr>\r\n            <tr><td>{skill2}</td></tr>\r\n            <tr><td>{skill3}</td></tr>\r\n            </tbody>\r\n        </table>\r\n        <form onSubmit={adoptPet}>\r\n         <button>Adopt This Pet</button>\r\n         </form>\r\n         <br/>\r\n        <Link to = {'/'}> Return to Main Page</Link> \r\n    </fieldset>\r\n}\r\n\r\nexport default PetDetail","import React from 'react';\nimport './App.css';\n\nimport { Router } from '@reach/router'\n\nimport PetList from \"./components/PetList\"\nimport AddPet from \"./components/AddPet\"\nimport Editpet from \"./components/EditPet\"\nimport PetDetail from \"./components/PetDetail\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <Router>\n        <PetList path=\"/\"/>\n        <AddPet path=\"/pets/new\"/>\n        <Editpet path=\"/pets/edit/:_id\"/>\n        <PetDetail path=\"/pets/:_id\"/>\n      </Router>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}